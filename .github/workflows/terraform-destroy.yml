name: Destroy Infrastructure

on:
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    #environment: .

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup AWS CLI
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
        token: ${{ secrets.GITHUB_TOKEN }}
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1           

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Determine Environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV=production" >> $GITHUB_ENV
          
          else
            echo "ENV=sandbox" >> $GITHUB_ENV
          fi
   
      

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init ./${{ env.ENV }}


    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Destroy
      run: terraform destroy -auto-approve ./${{ env.ENV }}
